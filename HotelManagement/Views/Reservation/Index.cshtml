@model IEnumerable<HotelManagement.Models.Reservation>

@if (TempData["Notification"] != null)
{
        <div class="alert alert-success text-center fixed-top mt-3 mx-auto shadow" style="width: 50%; z-index: 9999;">
        @TempData["Notification"]
        </div>
        <script>
            setTimeout(function () {
                document.querySelector('.alert').style.display = 'none';
            }, 4000);
        </script>
}

@{
    ViewData["Title"] = "Rezerwacje";

    var today = DateTime.Today;
    var arrivals = ViewBag.Arrivals != null ? ((IEnumerable<HotelManagement.Models.Reservation>)ViewBag.Arrivals).Count() : 0;
    var stays = ViewBag.InStay != null ? ((IEnumerable<HotelManagement.Models.Reservation>)ViewBag.InStay).Count() : 0;
    var departures = ViewBag.Departures != null ? ((IEnumerable<HotelManagement.Models.Reservation>)ViewBag.Departures).Count() : 0;
}

<div class="container mt-5">
    <h2 class="text-center mb-4">Rezerwacje</h2>

    <!-- Podsumowanie liczbowe -->
    <div class="d-flex justify-content-center gap-5 mb-4">
        <div class="text-center">
            <h6 class="text-muted">📥 Przyjazdy</h6>
            <h3 class="text-primary fw-bold">@arrivals</h3>
        </div>
        <div class="text-center">
            <h6 class="text-muted">🏨 Pobyty</h6>
            <h3 class="text-success fw-bold">@stays</h3>
        </div>
        <div class="text-center">
            <h6 class="text-muted">📤 Wyjazdy</h6>
            <h3 class="text-danger fw-bold">@departures</h3>
        </div>
    </div>

    <div class="text-end my-4">
        <h5 class="mb-3">
            <strong>Dzisiejsza data:</strong> <span class="fw-normal">@ViewBag.TodayDate</span>
        </h5>

        <a asp-action="CreateGuest" class="btn btn-lg btn-primary shadow-sm">
            <i class="bi bi-calendar-plus me-2"></i> Załóż rezerwację
        </a>
    </div>

    <!-- Zakładki -->
    <ul class="nav nav-tabs" id="myTab" role="tablist">
        <li class="nav-item" role="presentation">
            <a class="nav-link active" id="arrivals-tab" data-bs-toggle="tab" href="#arrivals" role="tab">Przyjazdy</a>
        </li>
        <li class="nav-item" role="presentation">
            <a class="nav-link" id="stay-tab" data-bs-toggle="tab" href="#stay" role="tab">Pobyty</a>
        </li>
        <li class="nav-item" role="presentation">
            <a class="nav-link" id="departures-tab" data-bs-toggle="tab" href="#departures" role="tab">Wyjazdy</a>
        </li>
    </ul>

    <!-- Treść zakładek -->
    <div class="tab-content" id="myTabContent">
        <!-- Przyjazdy -->
        <div class="tab-pane fade show active" id="arrivals" role="tabpanel">
            <h3 class="mt-3">Przyjazdy</h3>
            @Html.Partial("_ReservationTable", (IEnumerable<HotelManagement.Models.Reservation>)ViewBag.Arrivals)
        </div>

        <!-- Pobyty -->
        <div class="tab-pane fade" id="stay" role="tabpanel">
            <h3 class="mt-3">Pobyty</h3>
            @Html.Partial("_ReservationTable", (IEnumerable<HotelManagement.Models.Reservation>)ViewBag.InStay)
        </div>

        <!-- Wyjazdy -->
        <div class="tab-pane fade" id="departures" role="tabpanel">
            <h3 class="mt-3">Wyjazdy</h3>
            @Html.Partial("_ReservationTable", (IEnumerable<HotelManagement.Models.Reservation>)ViewBag.Departures)
        </div>
    </div>
</div>

<!-- Skrypt sortowania -->
<script>
    function sortTable(header) {
        const table = header.closest("table");
        const tbody = table.querySelector("tbody");
        const index = [...header.parentElement.children].indexOf(header);
        const rows = [...tbody.querySelectorAll("tr")];
        const asc = !header.classList.contains("asc");

        rows.sort((a, b) => {
            let aText = a.children[index].innerText.trim();
            let bText = b.children[index].innerText.trim();
            return asc
                ? aText.localeCompare(bText, undefined, { numeric: true })
                : bText.localeCompare(aText, undefined, { numeric: true });
        });

        header.parentElement.querySelectorAll("th").forEach(th => th.classList.remove("asc", "desc"));
        header.classList.toggle("asc", asc);
        header.classList.toggle("desc", !asc);

        rows.forEach(row => tbody.appendChild(row));
    }
</script>
